/*TODO
 * nazwa u¿ytkownika
 * obiekt Player i komunikacja z nim
 * implementacja MouseListener
 */
package Client;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

import javax.swing.*;

import Player.Player;

public class Client extends JFrame implements MouseListener
{
	public static final long serialVersionUID = 42L;
	private JFrame frame;
    private JLabel messageLabel;
	
	private int PORT = 8989;
    private Socket socket;
    private BufferedReader in;
    private PrintWriter out;

    
    private Player tools;
    
    public Client(String serverAddress) 
    {
    	frame = new JFrame("Go game");
    	messageLabel =  new JLabel("");
    	try
    	{
        	socket = new Socket(serverAddress, PORT);
            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            out = new PrintWriter(socket.getOutputStream(), true);
    	}
    	catch(IOException e)
    	{
    		
    	}
        
        setSize(800,800);
      //TODO tu trzeba siê jeszcze pobawic, nie wiem, jak bêdzie, ale koniecznie œcie¿ka wzdlêdna!
        JLabel background = new JLabel(new ImageIcon("./images/goboard.png")); 
    }
    
    /* G³ówny strumieñ klienta czeka na wiadomoœc z serwera.*/
    
    public void play() throws Exception
    {
    	/*zajmuje sie klikaniem na planszy i przesylanie informacji
    	 */
    }
    
    public static void main(String[] args) throws Exception 
    {
        String serverAddress="localhost";
        String login = "Jacek";
        JOptionPane.showInputDialog("Podaj adres serwera",serverAddress);//(args.length == 0) ? "localhost" : args[1];
        JOptionPane.showInputDialog("Podaj login",login);
        String[] opponent = {"Bot","Losowy przeciwnik"};
        JFrame question = new JFrame("Wybór przeciwnika");
        String opponentName = (String) JOptionPane.showInputDialog(question, 
                "Wybierz przeciwnika",
                "Opponent",
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                opponent, 
                opponent[0]);

        Client client = new Client(serverAddress);
        while (true) 
        {
            client.frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            client.frame.setSize(800, 800);
            client.frame.setVisible(true);
            client.frame.setResizable(false);
            //addMouseListener(client.frame);
            client.play();
        }
    }
    public void mouseClicked(MouseEvent evt)
    {
    	
    }
    public void mouseEntered(MouseEvent e){}
    public void mouseReleased(MouseEvent e){}
    public void mousePressed(MouseEvent e){}
    public void mouseExited(MouseEvent e){}
}