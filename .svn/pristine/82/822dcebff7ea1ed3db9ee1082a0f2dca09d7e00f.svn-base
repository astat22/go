/*TODO
 * nazwa u¿ytkownika
 * obiekt Player i komunikacja z nim
 * implementacja MouseListener
 */
package Client;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowListener;
import java.awt.geom.Line2D;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

import javax.swing.*;

import Game.Colour;
import Message.Message;
import Server.Order;

//import Player.Player;

public class Client extends JFrame implements MouseListener
{
	public static final long serialVersionUID = 42L;
	private JFrame frame;
    private JLabel messageLabel;
	
	private int PORT = 8990;
    private Socket socket;
	private ObjectInputStream clInput;
	private ObjectOutputStream clOutput;
	private int boardSize = 19;
	Colour[][] table;

    
    public Client(String serverAddress) 
    {
    	frame = new JFrame("Go game");
    	messageLabel =  new JLabel("");
    	try
    	{
        	socket = new Socket(serverAddress, PORT);
			clOutput = new ObjectOutputStream(socket.getOutputStream());
			clInput = new ObjectInputStream(socket.getInputStream());
            //in.readObj
    	}
    	catch(IOException e){}
//trzeba poczeka na przeciwnika    
    	startGame();
        frame.setSize(800,850);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());
        frame.setResizable(false);
        frame.addMouseListener(this);
    	JPanel board = new JPanel() 
    	{
	    	public static final long serialVersionUID = 42L;
	        protected void paintComponent(Graphics g) 
	        {
	
	            super.paintComponent(g);
	
	            Graphics2D g2 = (Graphics2D) g.create(); 
	
	        	g2.setColor(Color.BLACK);
	        	for(int x=0;x<boardSize;x++)
	        		g2.drawLine(20+40*x, 0,20+40*x,  20+boardSize*40);
	        	for(int y=0;y<boardSize;y++)
	        		g2.drawLine(0, 20+40*y, 20+boardSize*40,20+40*y  );
	            g2.dispose();
	
	        }
    	};
        frame.getContentPane().add(board);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        board.repaint();
    }
    
    
    public static void main(String[] args) throws Exception 
    {
        String serverAddress="localhost";
        String login = "Jacek";
        JOptionPane.showInputDialog("Podaj adres serwera",serverAddress);//(args.length == 0) ? "localhost" : args[1];
        JOptionPane.showInputDialog("Podaj login",login);
        String[] opponent = {"Bot","Losowy przeciwnik"};
        JFrame question = new JFrame("Wybór przeciwnika");
        String opponentName = (String) JOptionPane.showInputDialog(question, 
                "Wybierz przeciwnika",
                "Opponent",
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                opponent, 
                opponent[1]);
        Client client;
        if(!opponentName.equals("Bot"))
        	 client = new Client(serverAddress);
        else//graj z botem TODO
        	;
    }
    public void mouseClicked(MouseEvent evt)
    {
    	int x = evt.getX();
    	int y = evt.getY();
    	System.out.println(x+" "+y);
    }
    public void mouseEntered(MouseEvent e){}
    public void mouseReleased(MouseEvent e){}
    public void mousePressed(MouseEvent e){}
    public void mouseExited(MouseEvent e){}
    /**
     * Metoda oczekuj¹ca na sygna³ do rozpoczêcia gry
     */
    public void startGame()
    {
    	//System.out.println("Oczekiwanie na przeciwnika");
    	try
    	{
    		Message startMessage = (Message) clInput.readObject();
    		System.out.println("Odebrano potwierdzenie rozpoczêcia gry");
    		/*if(startMessage.getOrder()==Order.SIZE)//serwer pyta o rozmiar
    		{
    			String[] size = {"19x19","13x13","9x9"};
    			JFrame question = new JFrame("Wybór przeciwnika");
    	        String sizeName = (String) JOptionPane.showInputDialog(question, 
    	                "Wybierz rozmiar planszy",
    	                "Size",
    	                JOptionPane.QUESTION_MESSAGE, 
    	                null, 
    	                size, 
    	                size[0]);
    	        //wyœlij odpowiedŸ
    			startGame();//czekaj na drugiego gracza
    		}*/
    	}
    	catch(IOException e){ System.out.println("IO Error");}
    	catch(ClassNotFoundException e){}
    }
}